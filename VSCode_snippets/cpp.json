{
	// Place your snippets for bat here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

		"ifandroidplatform": {
			"scope": "cpp",
			"prefix": "ifandroid",
			"body": [
				"#if OGRE_PLATFORM == OGRE_PLATFORM_ANDROID\n\n#else\n\n#endif//OGRE_PLATFORM == OGRE_PLATFORM_ANDROID",
			],
			"description": "#if OGRE_PLATFORM == OGRE_PLATFORM_ANDROID"
		},

		"ifnotandroidplatform": {
			"scope": "cpp",
			"prefix": "ifnandroid",
			"body": [
				"#if OGRE_PLATFORM != OGRE_PLATFORM_ANDROID\n\n#else\n\n#endif//OGRE_PLATFORM != OGRE_PLATFORM_ANDROID",
			],
			"description": "#if OGRE_PLATFORM != OGRE_PLATFORM_ANDROID"
		},

		"ifnotiosplatform": {
			"scope": "cpp",
			"prefix": "ifnios",
			"body": [
				"#if OGRE_PLATFORM != OGRE_PLATFORM_APPLE\n\n#else\n\n#endif//OGRE_PLATFORM != OGRE_PLATFORM_APPLE",
			],
			"description": "#if OGRE_PLATFORM != OGRE_PLATFORM_APPLE"
		},

		"LOG_INFOinfo": {
			"scope": "cpp",
			"prefix": "logi",
			"body": [
				"LOG_INFO(\"$CLIPBOARD(): $\");",
			],
			"description": "LOG_INFO(\"$CLIPBOARD(): $\");"
		},

		"LOG_WARNINGwarning": {
			"scope": "cpp",
			"prefix": "logw",
			"body": [
				"LOG_WARNING(\"$CLIPBOARD(): $\");",
			],
			"description": "LOG_WARNING(\"$CLIPBOARD(): $\");"
		},

		"LOG_INFOi": {
			"scope": "cpp",
			"prefix": "logii",
			"body": [
				"LOG_INFO(\"$CLIPBOARD(): $1 = %d\", $1);",
			],
			"description": "LOG_INFO(\"function(): var = %d\", var)"
		},

		"LOG_INFOs": {
			"scope": "cpp",
			"prefix": "logis",
			"body": [
				"LOG_INFO(\"$CLIPBOARD(): $1 = %s\", $1);",
			],
			"description": "LOG_INFO(\"function(): var = %s\", var)"
		},

		"LOG_INFOx": {
			"scope": "cpp",
			"prefix": "logix",
			"body": [
				"LOG_INFO(\"$CLIPBOARD(): $1 = %x\", $1);",
			],
			"description": "LOG_INFO(\"function(): var = %x\", var)"
		},

		"LOG_INFOf": {
			"scope": "cpp",
			"prefix": "logif",
			"body": [
				"LOG_INFO(\"$CLIPBOARD(): $1 = %f\", $1);",
			],
			"description": "LOG_INFO(\"function(): var = %f\", var)"
		},

		"LOG_INFOdb": {
			"scope": "cpp",
			"prefix": "logidb",
			"body": [
				"LOG_INFO(\"$CLIPBOARD(): $1 = %llf\", $1);",
			],
			"description": "LOG_INFO(\"function(): var = %llf\", var)"
		},

		"annotate file": {
			"scope": "cpp",
			"prefix": "annotatefile",
			"body": [
				"//////////////////////////////////////////////////////////////////////////\n///\n/// @file     $TM_FILENAME\n/// @brief （本文件实现的功能的简述）\n///\n///（本文件实现的功能的详述）\n///\n/// @version 1.0      （版本声明）\n/// @author             seckawijoki\n/// @date                 $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE\n///\n///\n///     修订说明：\n//////////////////////////////////////////////////////////////////////////",
			],
			"description": "annotate file"
		},

		"annotate class": {
			"scope": "cpp",
			"prefix": "annotateclass",
			"body": [
				"///     本类的功能：\n///\n///     设计类型\n///     功能描述",
			],
			"description": "annotate class"
		},

		"annotate function": {
			"scope": "cpp",
			"prefix": "annotatefunction",
			"body": [
				"///      详述  \n///      @param 参数描述\n///      @return 返回描述\n///      @see 关联函数()\n///      @note 注意",
			],
			"description": "annotate function"
		},
}